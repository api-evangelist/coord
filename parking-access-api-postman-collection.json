{
    "id": "21fb895a4f6774f4a6388d04bbc657dd",
    "name": "Parking Access API",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "8434c23d4a568121409e19037643442e",
            "name": "Retrieve a location's sessions",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/{location_id}\/session",
            "description": "Retrieve information about all existing sessions at a location.\n\nOn success, the response will be a list of existing sessions. At most one will still be\nactive:\n```\n  [\n    {\n      \"id\":1,\n      \"start_time\":\"2018-04-12T00:14:20.292Z\",\n      \"end_time\":\"2018-04-12T04:10:13.456Z\",\n      \"user_id\":\"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n      \"id\":2,\n      \"start_time\":\"2018-04-12T00:14:20.292Z\",\n      \"user_id\":\"00000000-0000-0000-0000-000000000000\"\n    }\n  ]\n```\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        },
        {
            "id": "8dd9efc87e75319e94e7b15d3be20170",
            "name": "Create a new session",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/{location_id}\/session",
            "description": "Create a new session for the specified user at this location_id. Returns it with either\nthe start_time set, or a follow-on token (barcode, number, etc.) that the end user must use\nto initiate the session at the location.\n\nOn success, the response will be the newly created session:\n```\n  {\n    \"id\":1,\n    \"start_time\":\"2018-04-12T00:14:20.292Z\",\n    \"user_id\":\"00000000-0000-0000-0000-000000000000\"\n  }\n```\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        },
        {
            "id": "02384a0b094a964664483df31a65c54e",
            "name": "Retrieve an existing session",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/{location_id}\/session\/{session_id}",
            "description": "Retrieve information about an existing session. This is useful to determine if\/when an\nexisting session has been started or ended (via external, barcode mechanism, for example).\nIt may be polled to provide live feedback to an end user.\n\nOn success, the response will be the existing session:\n```\n  {\n    \"id\":1,\n    \"start_time\":\"2018-04-12T00:14:20.292Z\",\n    \"user_id\":\"00000000-0000-0000-0000-000000000000\"\n  }\n```\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        },
        {
            "id": "f5d494fe11f48473a0ec810ee3f61a4d",
            "name": "End a previously started session",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/{location_id}\/session\/{session_id}\/end",
            "description": "End a previously started session. Note that it is invalid to call this method for sessions\nwhere checkout is controlled physically (those returned with a `redemption_info` field).\n\nOn success, the response will be the existing session with billing info:\n```\n  {\n    \"billing_info\": {\n      \"cost\": {\n        \"amount\": 100,\n        \"currency\": \"USD\"\n      }\n    },\n    \"end_time\": \"2018-04-12T00:17:50.161Z\",\n    \"id\":1,\n    \"start_time\":\"2018-04-12T00:14:20.292Z\",\n    \"user_id\":\"00000000-0000-0000-0",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        },
        {
            "id": "ae6743cd3fdc05d41c2dbabaecc945fc",
            "name": "Create a barcode",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/barcode",
            "description": "Create a barcode for a user to be scanned upon entering\/exiting a parking lot.\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "request",
                    "description": "A request to simulate an arrival\/departure associated with the session.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        },
        {
            "id": "4a9167a34a7184d139dc1eae28209f6d",
            "name": "Retrieve a user's sessions",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/session",
            "description": "Retrieve information about all of a user's existing sessions.\n\nOn success, the response will be a list of existing sessions. At most one will still be\nactive:\n```\n  [\n    {\n      \"id\":1,\n      \"start_time\":\"2018-04-12T00:14:20.292Z\",\n      \"end_time\":\"2018-04-12T04:10:13.456Z\",\n      \"user_id\":\"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n      \"id\":2,\n      \"start_time\":\"2018-04-12T00:14:20.292Z\",\n      \"user_id\":\"00000000-0000-0000-0000-000000000000\"\n    }\n  ]\n```\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        },
        {
            "id": "2901c09d38876df80e61ad62584f59ea",
            "name": "For test users only - Simulate a user redemption",
            "url": "httpsapi.coord.co\/v1\/access\/parking\/testing\/{location_id}\/{session_id}\/simulate_redemption",
            "description": "Some sessions don't automatically start when created. Instead, they are returned with\n`redemption_info`, which might be a barcode, for example, that needs to be scanned at the\ntarget location. For such sessions started by test users, you can use this method to\nsimulate a redemption (arrival+departure). The system will behave as though a user checked\nin at a location where the session was creationg at the time you make the call and checked\nout at a time `duration_m` minutes in the future. **This ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "request",
                    "description": "A request to simulate an arrival\/departure associated with the session.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "21fb895a4f6774f4a6388d04bbc657dd",
            "rawModeData": ""
        }
    ]
}