{
    "id": "05b77575e9873a908a2dc0ebe3b8c2bf",
    "name": "Bike Share API",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "9dbec7d32adb68f623d27635ecb48254",
            "name": "Get bike locations in the requested search area, as a GeoJSON FeatureCollection.",
            "url": "httpsapi.coord.co\/v1\/bike\/location",
            "description": "Get a list of locations given the input parameters. Specify a search area by radius around\na latitude and longitude, as well as any filter for specific systems. Each location will\nbe a GeoJSON Feature, and aggregated into a GeoJSON FeatureCollection.\n\n### Example\n\n#### Request:\n`curl -G \"https:\/\/api.coord.co\/v1\/bike\/location?latitude=40.742868&longitude=-73.989186&radius_km=0.25&access_key=\"`\n\n#### Response:\n```\n{\n  \"features\": [\n    {\n      \"geometry\": {\n        \"coordinates\": [\n          -73.9",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "latitude",
                    "description": "Latitude to return results for.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "longitude",
                    "description": "Longitude to return results for.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "radius_km",
                    "description": "Distance, in kilometers, from (latitude, longitude) we will return results for.\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "system_ids",
                    "description": "Comma separated list of the bike system IDs to include in the search.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "05b77575e9873a908a2dc0ebe3b8c2bf",
            "rawModeData": ""
        },
        {
            "id": "3ff3504178daeef39a7a8556f7bd764a",
            "name": "Get detailed information on a bike location, as a GeoJSON Feature.",
            "url": "httpsapi.coord.co\/v1\/bike\/location\/{system_id}\/{location_id}",
            "description": "A bike location may be a single bike station (which can have multiple docked bikes) or a\nsingle dockless bike itself. All working docks are returned, but only free and rentable\ndockless bikes are returned.\n\n### Example\n\n#### Request:\n`curl -G \"https:\/\/api.coord.co\/v1\/bike\/location\/CitiBike\/482?access_key=\"`\n\n#### Response:\n```\n{\n  \"geometry\": {\n    \"coordinates\": [\n      -73.99931783,\n      40.73935542\n    ],\n    \"type\": \"Point\"\n  },\n  \"id\": \"CitiBike-482\",\n  \"properties\": {\n    \"is_renting\": tr",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "05b77575e9873a908a2dc0ebe3b8c2bf",
            "rawModeData": ""
        },
        {
            "id": "694fe3b4ea9dedc509699d40fb9d175b",
            "name": "Get the cost of renting a bike.",
            "url": "httpsapi.coord.co\/v1\/bike\/quote",
            "description": "Provide price quotes for renting a bike. There can be multiple quotes per system, reflecting\ndifferent options for buying membership such as single-ride, single-day, and multi-day\npasses. Please keep in mind that quotes are estimates.\n\n### Example\n\n#### Request:\n`curl -G \"https:\/\/api.coord.co\/v1\/bike\/quote?access_key=\"`\n\n#### Response:\n```\n[\n  {\n    \"cost\": {\n      \"amount\": 108,\n      \"currency\": \"USD\"\n    },\n    \"id\": 2,\n    \"max_days\": 1,\n    \"system_id\": \"CitiBike\",\n    \"tax_regions\": [{\n   ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "system_ids",
                    "description": "Comma separated list of the bike system IDs to include in the search.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "05b77575e9873a908a2dc0ebe3b8c2bf",
            "rawModeData": ""
        },
        {
            "id": "80fd5599cd96635f22dcd2b8ec67f99d",
            "name": "Get information on all bike systems in an area, as a GeoJSON FeatureCollection.",
            "url": "httpsapi.coord.co\/v1\/bike\/system",
            "description": "Bike systems are individual bike share systems, often per-region.\n\nInformation about each system is returned as a GeoJSON Feature, within a single GeoJSON\nFeatureCollection.\n\nSee the [\/system\/{system_id}](#reference\/0\/get-information-for-a-bike-system) call for more\ndetails on the individual system Features.\n\n### Example\n\n#### Request:\n`curl -G \"https:\/\/api.coord.co\/v1\/bike\/system?latitude=40.74286877312112&longitude=-73.98918628692627&radius_km=0.5&access_key=\"`\n\n#### Response:\n```\n{\n  \"feature",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "latitude",
                    "description": "Latitude to return results for.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "longitude",
                    "description": "Longitude to return results for.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "radius_km",
                    "description": "Distance, in kilometers, from (latitude, longitude) we will return results for.\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "05b77575e9873a908a2dc0ebe3b8c2bf",
            "rawModeData": ""
        },
        {
            "id": "8e84ac9a82816b07a6d224ce3a909584",
            "name": "Get detailed information on a bike system, as a GeoJSON feature.",
            "url": "httpsapi.coord.co\/v1\/bike\/system\/{system_id}",
            "description": "Bike systems are individual bike share systems, often per-region.\n\nInformation is returned as a GeoJSON Feature. The geometry of the GeoJSON Feature is\na MultiPolygon that defines the system's operational area. All bike systems have an\noperational area, in which bikes may be found and parked.\nFor systems that require bikes be docked, this area is somewhat arbitrary, as bikes are\nonly found at stations. In this case, the operational area is roughly the city or\njurisdiction that the system covers.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "access_key",
                    "description": "The API access key for the request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "05b77575e9873a908a2dc0ebe3b8c2bf",
            "rawModeData": ""
        }
    ]
}